plugins {
    id 'java'
    id 'java-library'

    id 'maven-publish'
}

group = 'dev.pcvolkmer.onco'
version = '0.1.0-SNAPSHOT'
archivesBaseName = 'obds2-to-obds3'

configurations {
    xsd2java
}

repositories {
    mavenCentral()
}

ext {
    jaxbTargetDir = file("src/generated/java")
}

sourceSets {
    main {
        java {
            srcDirs jaxbTargetDir
        }
    }
}

dependencies {
    api platform('com.fasterxml.jackson:jackson-bom:2.18.2')
    api 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    api 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    api 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'
    api 'jakarta.validation:jakarta.validation-api:3.1.0'
    api 'commons-codec:commons-codec:1.18.0'
    api 'org.slf4j:slf4j-api:2.0.17'

    // JAXB code generation
    xsd2java "com.sun.xml.bind:jaxb-xjc:4.0.5"
    xsd2java "com.sun.xml.bind:jaxb-impl:4.0.5"

    testImplementation platform('org.junit:junit-bom:5.11.4')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.27.3'
}

test {
    useJUnitPlatform()
}

tasks.register('xsd2java') {

    doLast {
        jaxbTargetDir.mkdirs()

        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.xsd2java.asPath)
        ant.jaxbTargetDir = jaxbTargetDir


        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'de.basisdatensatz.obds.v2',
                schema: 'src/main/resources/schema/ADT_GEKID_v2.2.3.xsd'
        )

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'de.basisdatensatz.obds.v3',
                schema: 'src/main/resources/schema/oBDS_v3.0.4.xsd',
                binding: 'src/main/resources/schema/oBDS_v3.0.4.bindings.xjb'
        )

    }
}
compileJava.dependsOn xsd2java

publishing {
    repositories {
        maven {
            name = "GitDnpmDev"

            def releasesRepoUrl = uri('https://git.dnpm.dev/api/packages/public/maven')
            def snapshotsRepoUrl = uri('https://git.dnpm.dev/api/packages/public-snapshots/maven')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials(HttpHeaderCredentials) {
                name = "Authorization"
                value = "token ${dnpm_dev_token}"
            }

            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = archivesBaseName
        }
    }
}
